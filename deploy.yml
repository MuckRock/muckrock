version: "3.7"

volumes:
  postgres_data_local: {}
  postgres_backup_local: {}

services:
  muckrock_django: &django
    build:
      context: .
      dockerfile: ./compose/local/django/Dockerfile.deploy
    depends_on:
      - muckrock_redis
      # - muckrock_postgres
    volumes:
      - .:/app
      - ~/.netrc:/root/.netrc
    environment:
      - IPYTHONDIR=/app/.ipython
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    command: /start
    ports:
      # the application runs on 0.0.0.0:80
      # in order to access it from a browser we have to set the access here
      # I always remember this with a phrase I made up, "looking outside in",
      # where the left most port is the outside (your browser aka localhost:5000)
      # and the inside port is what the app is serving, in this case 0.0.0.0:80
      # - "5000:80"
      - "5000:5000"
  nginx:
    restart: always
    container_name: nginx_server
    build:
      context: ./compose/production/nginx/
      dockerfile: Dockerfile
    depends_on:
      - muckrock_django
    ports:
      - "8000:80"
  # muckrock_postgres:
  #   build:
  #     context: .
  #     dockerfile: ./compose/production/postgres/Dockerfile
  #   image: muckrock_production_postgres
  #   volumes:
  #     - postgres_data_local:/var/lib/postgresql/data
  #     - postgres_backup_local:/backups
  #   env_file:
  #     - ./.envs/.local/.postgres
  muckrock_redis:
    image: "redis:3.2"

  muckrock_celeryworker:
    <<: *django
    image: "muckrock_local_celeryworker"
    depends_on:
      - muckrock_redis
    #   - muckrock_postgres
    command: /start-celeryworker
    environment:
      - C_FORCE_ROOT=true
    ports:
      - "5001:5001"
  muckrock_celerybeat:
    <<: *django
    image: "muckrock_local_celerybeat"
    depends_on:
      - muckrock_redis
    #   - muckrock_postgres
    command: /start-celerybeat
    ports:
      - "5002:5002"
