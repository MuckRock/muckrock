# syntax = docker/dockerfile:experimental
FROM public.ecr.aws/lambda/python:3.8

ENV PYTHONUNBUFFERED 1

ARG AWS_ACCESS_KEY_ID
ENV AWS_ACCESS_KEY_ID $AWS_ACCESS_KEY_ID
ARG AWS_SECRET_ACCESS_KEY
ENV AWS_SECRET_ACCESS_KEY $AWS_SECRET_ACCESS_KEY


RUN apt-get update && apt-get install -y --no-install-recommends \
  postgresql-client \
  libmemcached-dev

#
# install NVM
ENV NVM_DIR /usr/local/nvm
ENV NODE_VERSION 5.6.0

RUN mkdir $NVM_DIR
RUN curl https://raw.githubusercontent.com/creationix/nvm/v0.37.2/install.sh | bash \
  && . $NVM_DIR/nvm.sh \
  && nvm install $NODE_VERSION \
  && nvm alias default $NODE_VERSION \
  && nvm use default

ENV NODE_PATH $NVM_DIR/v$NODE_VERSION/lib/node_modules
ENV PATH      $NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH

# Requirements are installed here to ensure they will be cached.
COPY ./pip /pip
RUN --mount=type=cache,target=/root/.cache/pip pip install -r /pip/requirements.txt

COPY ./compose/dev/django/entrypoint /entrypoint
RUN sed -i 's/\r//' /entrypoint
RUN chmod +x /entrypoint

COPY ./compose/production/django/celery/worker/start /start-celeryworker
RUN sed -i 's/\r//' /start-celeryworker
RUN chmod +x /start-celeryworker

COPY ./compose/production/django/celery/beat/start /start-celerybeat
RUN sed -i 's/\r//' /start-celerybeat
RUN chmod +x /start-celerybeat

VOLUME . /app
WORKDIR /app
RUN ls
ENTRYPOINT ["/entrypoint"]
