# syntax = docker/dockerfile:experimental
FROM 912288704264.dkr.ecr.us-east-1.amazonaws.com/shared/python:3.8

ENV PYTHONUNBUFFERED 1
ARG DEPLOYMENT_ENV=prod

ARG REDIS_URL
ENV REDIS_URL $REDIS_URL

ARG REDIS_HOST
ENV REDIS_HOST $REDIS_HOST

ARG POSTGRES_USER
ENV POSTGRES_USER $POSTGRES_USER

ARG POSTGRES_DB
ENV POSTGRES_DB $POSTGRES_DB

ARG POSTGRES_PASSWORD
ENV POSTGRES_PASSWORD $POSTGRES_PASSWORD

ARG POSTGRES_HOST
ENV POSTGRES_HOST $POSTGRES_HOST

ARG POSTGRES_PORT
ENV POSTGRES_PORT $POSTGRES_PORT

ARG DATABASE_URL
ENV DATABASE_URL $DATABASE_URL

ARG SQUARELET_KEY
ENV SQUARELET_KEY $SQUARELET_KEY

ARG SQUARELET_SECRET
ENV SQUARELET_SECRET $SQUARELET_SECRET

ARG SQUARELET_URL
ENV SQUARELET_URL $SQUARELET_URL

ARG BANDIT_EMAIL
ENV BANDIT_EMAIL $BANDIT_EMAIL

ARG STRIPE_PUB_KEY
ENV STRIPE_PUB_KEY $STRIPE_PUB_KEY

ARG STRIPE_SECRET_KEY
ENV STRIPE_SECRET_KEY $STRIPE_SECRET_KEY

ARG MAILGUN_SERVER_NAME
ENV MAILGUN_SERVER_NAME $MAILGUN_SERVER_NAME

ARG MAILGUN_ACCESS_KEY
ENV MAILGUN_ACCESS_KEY $MAILGUN_ACCESS_KEY

ARG LOB_SECRET_KEY
ENV LOB_SECRET_KEY $LOB_SECRET_KEY

ARG LOB_WEBHOOK_KEY
ENV LOB_WEBHOOK_KEY $LOB_WEBHOOK_KEY

ARG LOB_BANK_ACCOUNT_ID
ENV LOB_BANK_ACCOUNT_ID $LOB_BANK_ACCOUNT_ID

RUN apt-get update && apt-get install -y --no-install-recommends \
  postgresql-client \
  libmemcached-dev \
  libz-dev

# install NVM
ENV NVM_DIR /usr/local/nvm
ENV NODE_VERSION 5.6.0

RUN mkdir $NVM_DIR
RUN curl https://raw.githubusercontent.com/creationix/nvm/v0.37.2/install.sh | bash \
  && . $NVM_DIR/nvm.sh \
  && nvm install $NODE_VERSION \
  && nvm alias default $NODE_VERSION \
  && nvm use default

ENV NODE_PATH $NVM_DIR/v$NODE_VERSION/lib/node_modules
ENV PATH      $NVM_DIR/versions/node/v$NODE_VERSION/bin:$PATH

COPY . /app/
WORKDIR /app

RUN pip install -r pip/requirements.txt

# Compile front-end dependencies
RUN npm install
RUN npm run build

RUN mv compose/$DEPLOYMENT_ENV/django/entrypoint entrypoint
RUN chmod +x entrypoint

EXPOSE 5000/tcp
ENTRYPOINT ["/app/entrypoint"]
