/*
** _mixins.scss
**
** Mixins provide shortcuts to different declarations.
** It is used to quickly apply a uniform value to an element.
** At some point, mixins should be used to define utility classes to allow for quicker styling.
*/

@mixin vr {
    margin-top: 0;
    margin-bottom: $vr;
    &:last-child {
        margin-bottom: 0;
    }
}

@mixin font-sizing($size-multiplier, $line-multiplier:3) {
    $size: 1em * $size-multiplier;
    $line: $vr;
    font-size: $size;
    line-height: $lh;
    margin: 0 0 $vr 0;
}

@mixin border-radius() {
    border-radius: $border-radius;
}

@mixin border() {
    border: $border $color-grey;
}

@mixin box-shadow() {
    box-shadow: 0px 4px 8px 0px $color-grey;
}

@mixin padding($padding: $vr) {
    padding: $padding/2;
    @include media($medium-bp) {
        padding: $padding;
    }
}

@mixin textbox() {
    @include box-sizing(border-box);
    @include border;
    @include border-radius;
    border-color: $color-grey;
}

@mixin panel() {
    @include textbox;
    overflow: hidden;
    display: block;
    width: 100%;
    margin:  $vr/2 0;
    padding: $vr/6 $vr/3;

}

@mixin input() {
    @include textbox;
    display: inline-block;
    padding: $vr/4 $vr/3 $vr/4 $vr/2;
    &:disabled {
        background-color: lighten($color-disabled, 25%);
        border: 1px solid $color-disabled;
        color: $color-disabled;
    }
}

@mixin action-input($color: $color-black, $background: $color-grey-7) {
    form {
        display: block;
        width: 100%;
        height: 2*$vr;
        background-color: $background;
        @include border-radius;
        border-color: $background;
        @include transition(border-color .25s linear);
        input {
            @include appearance(none);
            width: 75%;
            height: 100%;
            float: left;
            margin-right: 0;
            color: $color;
            background: transparent;
            border: none;
            @include placeholder {
                color: $color-grey-5;
            }
            &:focus {
                outline: none;
            }
            & ~ span.input-button {
                display: inline-block;
                float: right;
                clear: right;
                height: 100%;
                width: 25%;
                margin: 0;
                cursor: pointer;
                text-align: center;
                svg {
                    display: inline-block;
                    height: 100%;
                    fill: $color;
                }
            }
        }
    }
}

@mixin overflow-ellipsis() {
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
}

@mixin svg-color($color) {
    path, polygon, rect, circle {
        fill: $color;
    }
}

@mixin background-blur($amount:4px) {
    backdrop-filter: blur($amount);
}
