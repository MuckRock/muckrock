# -*- coding: utf-8 -*-
# Generated by Django 1.9.5 on 2016-06-08 20:42
from __future__ import unicode_literals

from django.db import migrations

import datetime
import re

def unique_username(base_username, AgencyUser):
    """Get a unique username"""
    base_username = base_username.replace(' ', '')
    base_username = re.sub('[^\w\-.@]', '', base_username)[:30]
    username = base_username
    num = 1
    while AgencyUser.objects.filter(username__iexact=username).exists():
        postfix = str(num)
        username = '%s%s' % (base_username[:30 - len(postfix)], postfix)
        num += 1
    return username


def create_default_agency_users(apps, schema_editor):
    """Create new agency users based on agency emails"""
    Agency = apps.get_model('agency', 'Agency')
    AgencyProfile = apps.get_model('agency', 'AgencyProfile')
    AgencyUser = apps.get_model('accounts', 'AgencyUser')
    Profile = apps.get_model('accounts', 'Profile')
    total = Agency.objects.filter(status='approved').count()
    for i, agency in enumerate(Agency.objects.filter(status='approved')):
        if i % 10 == 0:
            print '%d out of %d' % (i, total)
        email_exists = AgencyUser.objects.filter(email=agency.email).exists()
        fax_exists = AgencyUser.objects.filter(profile__fax=agency.fax).exists()

        if agency.email and not email_exists:
            full_name = agency.contact_first_name + agency.contact_last_name
            full_name = full_name.strip()
            user = AgencyUser.objects.create(
                    email=agency.email,
                    username=unique_username(full_name or agency.email, AgencyUser),
                    first_name=agency.contact_first_name[:30],
                    last_name=agency.contact_last_name[:30],
                    )
            kwargs = {}
            if agency.fax and not fax_exists:
                kwargs = {'fax': agency.fax}
            Profile.objects.create(
                    user=user,
                    acct_type='agency',
                    email_pref='never',
                    date_update=datetime.date.today(),
                    title=agency.contact_title,
                    salutation=agency.contact_salutation,
                    **kwargs
                    )
            AgencyProfile.objects.create(
                    user=user,
                    agency=agency,
                    primary='to',
                    )
        elif agency.email and email_exists:
            user = AgencyUser.objects.get(email=agency.email)

            if not user.first_name or not user.last_name:
                user.first_name = agency.contact_first_name[:30]
                user.last_name = agency.contact_last_name[:30]
                user.save()
            user.profile.acct_type = 'agency'
            user.profile.title = agency.contact_title
            user.profile.salutation = agency.contact_salutation
            if not fax_exists and agency.fax and not user.profile.fax:
                user.profile.fax = agency.fax
            user.profile.save()
            agencyprofile, _ = AgencyProfile.objects.get_or_create(
                    user=user, agency=agency)
            agencyprofile.primary = 'to'
            agencyprofile.save()
        elif agency.fax and not fax_exists:
            full_name = agency.contact_first_name + agency.contact_last_name
            full_name = full_name.strip()
            user = AgencyUser.objects.create(
                    username=unique_username(
                        full_name or '{}_fax'.format(agency.name[:25]),
                        AgencyUser),
                    first_name=agency.contact_first_name[:30],
                    last_name=agency.contact_last_name[:30],
                    )
            Profile.objects.create(
                    user=user,
                    acct_type='agency',
                    email_pref='never',
                    date_update=datetime.date.today(),
                    title=agency.contact_title,
                    salutation=agency.contact_salutation,
                    fax=agency.fax,
                    )
            AgencyProfile.objects.create(
                    user=user,
                    agency=agency,
                    primary='to',
                    )
        elif agency.fax and fax_exists:
            user = AgencyUser.objects.get(profile__fax=agency.fax)

            if not user.first_name or not user.last_name:
                user.first_name = agency.contact_first_name[:30]
                user.last_name = agency.contact_last_name[:30]
                user.save()
            user.profile.acct_type = 'agency'
            user.profile.title = agency.contact_title
            user.profile.salutation = agency.contact_salutation
            user.profile.save()
            agencyprofile, _ = AgencyProfile.objects.get_or_create(
                    user=user, agency=agency)
            agencyprofile.primary = 'to'
            agencyprofile.save()
            
        for email in agency.other_emails.split(','):
            email = email.strip()
            if not email:
                continue
            if AgencyUser.objects.filter(email=email).exists():
                user = AgencyUser.objects.get(email=email)
                user.profile.acct_type = 'agency'
                user.profile.save()
                agencyprofile, _ = AgencyProfile.objects.get_or_create(
                        user=user, agency=agency)
                agencyprofile.primary = 'cc'
                agencyprofile.save()
            else:
                user = AgencyUser.objects.create(
                        email=email,
                        username=unique_username(email, AgencyUser),
                        )
                Profile.objects.create(
                        user=user,
                        acct_type='agency',
                        email_pref='never',
                        date_update=datetime.date.today(),
                        )
                AgencyProfile.objects.create(
                        user=user,
                        agency=agency,
                        primary='cc',
                        )


class Migration(migrations.Migration):

    dependencies = [
        ('agency', '0012_format_faxes'),
        ('accounts', '0018_auto_20160608_2034'),
    ]

    operations = [
        migrations.RunPython(create_default_agency_users, lambda a, s: None),
    ]
